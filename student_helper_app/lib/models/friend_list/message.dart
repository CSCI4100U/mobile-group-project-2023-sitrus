import 'package:cloud_firestore/cloud_firestore.dart';

// Defines a model for chat messages in the application.
class Message {
  // Unique identifier for the message, nullable for new messages to be generated by Firestore.
  final String? uid;
  // Timestamp of the message, using Firestore's Timestamp type for compatibility.
  final Timestamp timestamp;
  // Sender's display name.
  final String sender;
  // Sender's unique identifier.
  final String senderUid;
  // Receiver's display name.
  final String receiver;
  // Receiver's unique identifier.
  final String receiverUid;
  // Content of the message.
  final String content;
  // Flag to indicate if the message has been edited.
  final bool edited;
  // Flag to indicate if the message has been deleted.
  final bool deleted;

  // Constructor for creating a new Message instance.
  Message({
    this.uid,
    required this.timestamp,
    required this.sender,
    required this.senderUid,
    required this.receiver,
    required this.receiverUid,
    required this.content,
    this.edited = false,
    this.deleted = false,
  });

  // Converts a Message instance to a map, useful for Firestore operations.
  Map<String, dynamic> toMap() {
    return {
      'uid': uid,
      'timestamp': timestamp,
      'sender': sender,
      'senderUid': senderUid,
      'receiver': receiver,
      'receiverUid': receiverUid,
      'content': content,
      'edited': edited,
      'deleted': deleted,
    };
  }

  // Factory constructor to create a Message instance from a map of values.
  static Message fromMap(Map<String, dynamic> map) {
    return Message(
      uid: map['uid'],
      timestamp: map['timestamp'] as Timestamp,
      sender: map['sender'],
      senderUid: map['senderUid'],
      receiver: map['receiver'],
      receiverUid: map['receiverUid'],
      content: map['content'],
      edited: map['edited'] ?? false,
      deleted: map['deleted'] ?? false,
    );
  }

  // Creates a copy of the Message with modified fields, providing default values for unmodified fields.
  Message copyWith({
    String? uid,
    Timestamp? timestamp,
    String? sender,
    String? senderUid,
    String? receiver,
    String? receiverUid,
    String? content,
    bool? edited,
    bool? deleted,
  }) {
    return Message(
      uid: uid ?? this.uid,
      timestamp: timestamp ?? this.timestamp,
      sender: sender ?? this.sender,
      senderUid: senderUid ?? this.senderUid,
      receiver: receiver ?? this.receiver,
      receiverUid: receiverUid ?? this.receiverUid,
      content: content ?? this.content,
      edited: edited ?? this.edited,
      deleted: deleted ?? this.deleted,
    );
  }
}
